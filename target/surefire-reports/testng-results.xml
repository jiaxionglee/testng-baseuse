<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="0" ignored="0" total="2" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="All Test Suite" duration-ms="491" started-at="2019-01-02T07:01:56Z" finished-at="2019-01-02T07:01:57Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="491" started-at="2019-01-02T07:01:56Z" finished-at="2019-01-02T07:01:57Z">
      <class name="injection.DependencyInjection">
        <test-method status="PASS" signature="bfClass(org.testng.ITestContext)[pri:0, instance:injection.DependencyInjection@140e5a13]" name="bfClass" is-config="true" duration-ms="54" started-at="2019-01-02T07:01:56Z" finished-at="2019-01-02T07:01:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@1165b38]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bfClass -->
        <test-method status="PASS" signature="bfMethod1(org.testng.xml.XmlTest)[pri:0, instance:injection.DependencyInjection@140e5a13]" name="bfMethod1" is-config="true" duration-ms="2" started-at="2019-01-02T07:01:56Z" finished-at="2019-01-02T07:01:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.xml.XmlTest@d30b898]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bfMethod1 -->
        <test-method status="PASS" signature="bfMethod2(java.lang.reflect.Method)[pri:0, instance:injection.DependencyInjection@140e5a13]" name="bfMethod2" is-config="true" duration-ms="1" started-at="2019-01-02T07:01:56Z" finished-at="2019-01-02T07:01:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void injection.DependencyInjection.test1(int,int)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bfMethod2 -->
        <test-method status="PASS" signature="bfMethod3([Ljava.lang.Object;)[pri:0, instance:injection.DependencyInjection@140e5a13]" name="bfMethod3" is-config="true" duration-ms="1" started-at="2019-01-02T07:01:56Z" finished-at="2019-01-02T07:01:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@7586beff]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bfMethod3 -->
        <test-method status="PASS" signature="test1(int, int)[pri:0, instance:injection.DependencyInjection@140e5a13]" name="test1" duration-ms="216" started-at="2019-01-02T07:01:56Z" data-provider="dp" finished-at="2019-01-02T07:01:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="FAIL" signature="afMethod(org.testng.ITestResult)[pri:0, instance:injection.DependencyInjection@140e5a13]" name="afMethod" is-config="true" duration-ms="4" started-at="2019-01-02T07:01:57Z" finished-at="2019-01-02T07:01:57Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[wrong number of arguments]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: wrong number of arguments
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:386)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:323)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:143)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afMethod -->
        <test-method status="SKIP" signature="bfMethod1(org.testng.xml.XmlTest)[pri:0, instance:injection.DependencyInjection@140e5a13]" name="bfMethod1" is-config="true" duration-ms="0" started-at="2019-01-02T07:01:57Z" finished-at="2019-01-02T07:01:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bfMethod1 -->
        <test-method status="SKIP" signature="bfMethod3([Ljava.lang.Object;)[pri:0, instance:injection.DependencyInjection@140e5a13]" name="bfMethod3" is-config="true" duration-ms="0" started-at="2019-01-02T07:01:57Z" finished-at="2019-01-02T07:01:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bfMethod3 -->
        <test-method status="SKIP" signature="test2(int, int)[pri:0, instance:injection.DependencyInjection@140e5a13]" name="test2" duration-ms="0" started-at="2019-01-02T07:01:57Z" data-provider="dp" finished-at="2019-01-02T07:01:57Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[wrong number of arguments]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: wrong number of arguments
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:386)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:323)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:143)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="SKIP" signature="bfMethod2(java.lang.reflect.Method)[pri:0, instance:injection.DependencyInjection@140e5a13]" name="bfMethod2" is-config="true" duration-ms="0" started-at="2019-01-02T07:01:57Z" finished-at="2019-01-02T07:01:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bfMethod2 -->
        <test-method status="SKIP" signature="afMethod(org.testng.ITestResult)[pri:0, instance:injection.DependencyInjection@140e5a13]" name="afMethod" is-config="true" duration-ms="0" started-at="2019-01-02T07:01:57Z" finished-at="2019-01-02T07:01:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afMethod -->
        <test-method status="SKIP" signature="afClass(org.testng.ITestContext)[pri:0, instance:injection.DependencyInjection@140e5a13]" name="afClass" is-config="true" duration-ms="0" started-at="2019-01-02T07:01:57Z" finished-at="2019-01-02T07:01:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afClass -->
      </class> <!-- injection.DependencyInjection -->
    </test> <!-- Test -->
  </suite> <!-- All Test Suite -->
</testng-results>
